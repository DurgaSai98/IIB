DECLARE VAR1 SHARED INTEGER 1;

--DECLARE ext EXTERNAL CHARACTER ;

CREATE COMPUTE MODULE db_input_Compute
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		-- CALL CopyMessageHeaders();
		 CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		-- SET OutputRoot = InputRoot;
		
		DECLARE VAR2 BLOB;
		DECLARE VAR3 CHARACTER;
		
		DECLARE VAR REFERENCE TO InputRoot.DataObject;
		
		SET VAR2 =ASBITSTREAM(VAR  CCSID InputRoot.Properties.CodedCharSetId  ENCODING InputRoot.Properties.Encoding);
		
		SET VAR3 = CAST(VAR2 AS CHARACTER CCSID InputRoot.Properties.CodedCharSetId ENCODING InputRoot.Properties.Encoding);
		
		CALL LOGS (VAR1,ApplicationLabel,MessageFlowLabel,'SAMPLE',VAR3,CURRENT_TIMESTAMP); 
		
		SET VAR1=VAR1+1;
		
		
	END;
END MODULE;

CREATE PROCEDURE LOGS (IN MESSAGE_ID INTEGER, IN APPLICATION_NAME CHARACTER,IN MESSAGE_FLOW_NAME CHARACTER,IN MESSAGE_TYPE CHARACTER,IN MESSAGE_IN CHARACTER, IN LOGGED_ON TIMESTAMP )
LANGUAGE DATABASE 
EXTERNAL NAME  DBPROFORLOG;
